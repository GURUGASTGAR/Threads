// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(70)
  username   String    @db.VarChar(70) @unique
  password   String?
  created_at DateTime  @default(now())
  post Post[]
  comment Comment[]
  notification Notification[]
}

model Post {
  id        Int        @id @default(autoincrement())
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade )
  user_id Int
  content String
  image String
  comment_count Int @default(0)
  created_at DateTime @default(now())
  commnet Comment[]
}

model Comment {
  id   Int @id @default(autoincrement())
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
  post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id Int
  content String
  created_at DateTime @default(now())
}

model Notification {
  id Int @id @default(autoincrement())
  user User @relation(fields: [user_id], references: [id],onDelete: Cascade)
  user_id Int
  content String
  touser_id Int
  created_at DateTime @default(now())
}
